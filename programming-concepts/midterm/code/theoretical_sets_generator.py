import random

QUESTIONS = [
    "- Що таке змінна в Python?",
    "- Які основні числові типи даних у Python?",
    "- Як в Python перетворити строку в число?",
    "- Що таке булеві значення в Python?",
    "- Які операції можна виконувати з рядками в Python?",
    "- Які типи даних в Python є незмінюваними?",
    "- Що таке тип даних None в Python?",
    "- Які операції можливі з числовими типами даних в Python?",
    "- Як в Python здійснюється конкатенація рядків?",
    "- Як у Python перевірити тип даних змінної?",
    "- Які логічні оператори доступні в Python?",
    "- Як в Python виконати приведення типів?",
    "- Як отримати довжину рядка в Python?",
    "- Як в Python визначити, що змінна є числом?",
    "- Які способи форматування рядків існують в Python?",
    "- Як у Python перевірити рівність рядків?",
    "- Як у Python використовувати оператори порівняння?",
    "- Які правила іменування змінних в Python?",
    "- Що таке інтерполяція рядків в Python?",
    "- Як в Python здійснюється копіювання рядків?",
    "- Що таке список у Python і як він створюється?",
    "- Як додати елемент до кінця списку в Python?",
    "- Що таке кортеж у Python і в чому його відмінність від списку?",
    "- Як перевірити наявність елемента в словнику Python?",
    "- Як видалити елемент з множини в Python?",
    "- Як створити словник у Python?",
    "- Які методи можна використовувати для роботи зі списками в Python?",
    "- Як змінити елемент у списку Python?",
    "- Що таке розпаковка колекцій в Python?",
    "- Як об'єднати два словника в Python?",
    "- Як в Python знайти довжину списку?",
    "- Як в Python видалити елемент зі списку за індексом?",
    "- Які особливості роботи з множинами в Python?",
    "- Як в Python звернутися до елемента словника?",
    "- Як в Python створити пусту множину?",
    "- Які методи доступні для роботи з кортежами в Python?",
    "- Як в Python видалити всі елементи зі списку?",
    "- Як в Python перевірити, чи є ключ у словнику?",
    "- Як у Python отримати список ключів зі словника?",
    "- Як в Python знайти перетин двох множин?",
    "- Як в Python отримати підмножину списку?",
    "- Як в Python перевірити наявність елемента в списку?",
    "- Які особливості використання індексів у списках Python?",
    "- Як в Python використовувати метод get для словників?",
    "- Як в Python видалити елемент зі словника за ключем?",
    "- Які колекції в Python є змінюваними (mutable) і які незмінюваними (immutable)?",
    "- Як ітерувати по елементах списку в Python?",
    "- Чим відрізняється метод append() від extend() при роботі зі списками в Python?",
    "- Як видалити дублікати зі списку в Python?",
    "- Як можна використати генератор списку (list comprehension) для створення списку в Python?",
    "- Які методи існують для додавання елементів у словник в Python?",
    "- Як перевірити, чи існує ключ у словнику в Python?",
    "- Як ітерувати по ключах і значенням у словнику в Python?",
    "- Як можна видалити елемент із множини в Python, і що відбудеться, якщо такого елемента не існує?",
    "- Як об'єднати дві множини в Python, і яка відмінність між методами union() і update()?",
    "- Як скопіювати список в Python, щоб зміни в одному списку не впливали на інший?",
    "- Які переваги використання кортежів перед списками в Python?",
    "- Як використовувати індекси і зрізи для доступу до елементів списку в Python?",
    "- Як можна перетворити список в множину в Python, і для чого це може бути корисно?",
    "- Як ітерувати по елементах множини в Python, і чи є гарантія порядку елементів під час ітерації?",
    "- Як створити вкладені списки в Python, і як до них звертатися?",
    "- Як змінити значення елемента у словнику в Python?",
    "- Чому важливо використовувати незмінювані типи даних для ключів словника в Python?",
    "- Як можна видалити всі елементи зі списку в Python?",
    "- Як визначити розмір колекції (наприклад, списку, словника, множини) в Python?"
]


def create_question_sets(questions, set_size=4):
    random.shuffle(questions)
    sets = []
    for idx in range(0, len(questions), set_size):
        current_set = questions[idx:idx + set_size]
        if sets and len(sets[-1]) == set_size:
            common_questions = set(sets[-1]) & set(current_set)
            while len(common_questions) > 1:
                random.shuffle(current_set)
                common_questions = set(sets[-1]) & set(current_set)
        sets.append(current_set)
    return sets


question_sets = create_question_sets(QUESTIONS, set_size=4)

for i, q_set in enumerate(question_sets, 1):
    print(f"Set {i}:")
    for q in q_set:
        print(q)
    print("\n")
